{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/huatianjie/Desktop/demo/react-bridge/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n/**\n *  将与原生交互的bridge对象挂载到React下，并绑定全局函数\n *  调用原生方法示例\n * \n    var self = this;\n     React.$bqJSBridgeService('firstPageClick', { name: 'li' }, function(data) {\n       self.setState({\n         text: data.name\n       });\n     });\n  * */\n\nvar u = navigator.userAgent;\nvar isiOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n\nif (isiOS) {\n  // iOS 初始化\n  React.$bridge = window.WebViewJavascriptBridge;\n} else {\n  // android初始化（安卓初始化对象较晚）\n  document.addEventListener('WebViewJavascriptBridgeReady', function () {\n    React.$bridge = window.WebViewJavascriptBridge;\n  });\n}\n\nReact.$bqJSBridgeService = function (funcName, funcParams, callbackFuc) {\n  var lastParams = {\n    'FUNC_NAME': funcName,\n    'FUNC_PARAMS': funcParams\n  };\n\n  if (typeof React.$bridge == 'undefined') {\n    document.addEventListener('WebViewJavascriptBridgeReady', function () {\n      React.$bridge = window.WebViewJavascriptBridge;\n      React.$bridge.callHandler('BQJSBridgeService', lastParams, function (response) {\n        if (typeof response == 'string') {\n          response = JSON.parse(response);\n          callbackFuc(response);\n        } else {\n          callbackFuc(response);\n        }\n      });\n    });\n  } else {\n    React.$bridge.callHandler('BQJSBridgeService', lastParams, function (response) {\n      if (typeof response == 'string') {\n        response = JSON.parse(response);\n        callbackFuc(response);\n      } else {\n        callbackFuc(response);\n      }\n    });\n  }\n}; // 注意bridge的绑定一定在ReactDOM渲染前，不然业务组件的componentDidMount方法中获取React.$bride\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/huatianjie/Desktop/demo/react-bridge/my-app/src/index.js"],"names":["React","ReactDOM","App","u","navigator","userAgent","isiOS","match","$bridge","window","WebViewJavascriptBridge","document","addEventListener","$bqJSBridgeService","funcName","funcParams","callbackFuc","lastParams","callHandler","response","JSON","parse","render","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,IAAIC,CAAC,GAAGC,SAAS,CAACC,SAAlB;AACA,IAAIC,KAAK,GAAG,CAAC,CAACH,CAAC,CAACI,KAAF,CAAQ,+BAAR,CAAd;;AACA,IAAGD,KAAH,EAAS;AACJ;AACDN,EAAAA,KAAK,CAACQ,OAAN,GAAiBC,MAAM,CAACC,uBAAxB;AACH,CAHD,MAGK;AACD;AACAC,EAAAA,QAAQ,CAACC,gBAAT,CACA,8BADA,EAC+B,YAAU;AACxCZ,IAAAA,KAAK,CAACQ,OAAN,GAAgBC,MAAM,CAACC,uBAAvB;AACA,GAHD;AAIH;;AAEFV,KAAK,CAACa,kBAAN,GAA2B,UAAUC,QAAV,EAAoBC,UAApB,EAAgCC,WAAhC,EAA6C;AACtE,MAAIC,UAAU,GAAG;AAAE,iBAAaH,QAAf;AAAyB,mBAAeC;AAAxC,GAAjB;;AACA,MAAI,OAAQf,KAAK,CAACQ,OAAd,IAA0B,WAA9B,EAA2C;AACzCG,IAAAA,QAAQ,CAACC,gBAAT,CACE,8BADF,EACkC,YAAY;AAC1CZ,MAAAA,KAAK,CAACQ,OAAN,GAAgBC,MAAM,CAACC,uBAAvB;AACAV,MAAAA,KAAK,CAACQ,OAAN,CAAcU,WAAd,CAA0B,mBAA1B,EAA+CD,UAA/C,EAA2D,UAAUE,QAAV,EAAoB;AAC7E,YAAI,OAAOA,QAAP,IAAmB,QAAvB,EAAiC;AAC/BA,UAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;AACAH,UAAAA,WAAW,CAACG,QAAD,CAAX;AACD,SAHD,MAGO;AACLH,UAAAA,WAAW,CAACG,QAAD,CAAX;AACD;AACF,OAPD;AAQD,KAXH;AAYD,GAbD,MAaO;AACLnB,IAAAA,KAAK,CAACQ,OAAN,CAAcU,WAAd,CAA0B,mBAA1B,EAA+CD,UAA/C,EAA2D,UAAUE,QAAV,EAAoB;AAC7E,UAAI,OAAOA,QAAP,IAAmB,QAAvB,EAAiC;AAC/BA,QAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;AACAH,QAAAA,WAAW,CAACG,QAAD,CAAX;AACD,OAHD,MAGO;AACLH,QAAAA,WAAW,CAACG,QAAD,CAAX;AACD;AACF,KAPD;AAQD;AACF,CAzBD,C,CA2BA;;;AACClB,QAAQ,CAACqB,MAAT,eACC,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADD,EAICX,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAJD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\n /**\n  *  将与原生交互的bridge对象挂载到React下，并绑定全局函数\n  *  调用原生方法示例\n  * \n     var self = this;\n      React.$bqJSBridgeService('firstPageClick', { name: 'li' }, function(data) {\n        self.setState({\n          text: data.name\n        });\n      });\n\n  * */ \n var u = navigator.userAgent;\n var isiOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n if(isiOS){\n      // iOS 初始化\n     React.$bridge =  window.WebViewJavascriptBridge;\n }else{\n     // android初始化（安卓初始化对象较晚）\n     document.addEventListener(\n     'WebViewJavascriptBridgeReady',function(){\n      React.$bridge = window.WebViewJavascriptBridge;\n     });\n }\n\nReact.$bqJSBridgeService = function (funcName, funcParams, callbackFuc) {\n  var lastParams = { 'FUNC_NAME': funcName, 'FUNC_PARAMS': funcParams };\n  if (typeof (React.$bridge) == 'undefined') {\n    document.addEventListener(\n      'WebViewJavascriptBridgeReady', function () {\n        React.$bridge = window.WebViewJavascriptBridge;\n        React.$bridge.callHandler('BQJSBridgeService', lastParams, function (response) {\n          if (typeof response == 'string') {\n            response = JSON.parse(response)\n            callbackFuc(response);\n          } else {\n            callbackFuc(response);\n          }\n        })\n      });\n  } else {\n    React.$bridge.callHandler('BQJSBridgeService', lastParams, function (response) {\n      if (typeof response == 'string') {\n        response = JSON.parse(response)\n        callbackFuc(response);\n      } else {\n        callbackFuc(response);\n      }\n    });\n  }\n};\n\n// 注意bridge的绑定一定在ReactDOM渲染前，不然业务组件的componentDidMount方法中获取React.$bride\n ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}